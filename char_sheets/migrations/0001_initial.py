# Generated by Django 5.0.7 on 2024-07-15 08:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('quantity', models.IntegerField(default=1)),
                ('rarity', models.CharField(choices=[('common', 'Common'), ('uncommon', 'Uncommon'), ('rare', 'Rare'), ('very_rare', 'Very Rare'), ('legendary', 'Legendary')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('level', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9')])),
            ],
        ),
        migrations.CreateModel(
            name='CharacterSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('race', models.CharField(choices=[('human', 'Human'), ('elf', 'Elf'), ('dwarf', 'Dwarf'), ('halfling', 'Halfling'), ('gnome', 'Gnome'), ('half_orc', 'Half-Orc'), ('half_elf', 'Half-Elf'), ('dragonborn', 'Dragonborn'), ('tiefling', 'Tiefling')], max_length=20)),
                ('class_type', models.CharField(choices=[('barbarian', 'Barbarian'), ('bard', 'Bard'), ('cleric', 'Cleric'), ('druid', 'Druid'), ('fighter', 'Fighter'), ('monk', 'Monk'), ('paladin', 'Paladin'), ('ranger', 'Ranger'), ('rogue', 'Rogue'), ('sorcerer', 'Sorcerer'), ('warlock', 'Warlock'), ('wizard', 'Wizard')], max_length=20)),
                ('level', models.PositiveIntegerField(default=1)),
                ('strength', models.PositiveIntegerField()),
                ('dexterity', models.PositiveIntegerField()),
                ('constitution', models.PositiveIntegerField()),
                ('intelligence', models.PositiveIntegerField()),
                ('wisdom', models.PositiveIntegerField()),
                ('charisma', models.PositiveIntegerField()),
                ('strength_b', models.IntegerField()),
                ('dexterity_b', models.IntegerField()),
                ('constitution_b', models.IntegerField()),
                ('intelligence_b', models.IntegerField()),
                ('wisdom_b', models.IntegerField()),
                ('charisma_b', models.IntegerField()),
                ('speed', models.PositiveIntegerField()),
                ('max_hp', models.PositiveIntegerField()),
                ('current_hp', models.PositiveIntegerField()),
                ('temporary_hp', models.PositiveIntegerField(default=0)),
                ('armor_class', models.PositiveIntegerField()),
                ('condition', models.CharField(blank=True, max_length=250)),
                ('defense_traits', models.CharField(blank=True, max_length=250)),
                ('proficiency_bonus', models.PositiveIntegerField()),
                ('inspiration', models.BooleanField()),
                ('initiative', models.PositiveIntegerField()),
                ('passive_reception', models.PositiveIntegerField()),
                ('passive_investigation', models.PositiveIntegerField()),
                ('passive_insight', models.PositiveIntegerField()),
                ('armor', models.CharField(choices=[('light', 'Light Armor'), ('medium', 'Medium Armor'), ('heavy', 'Heavy Armor'), ('shield', 'Shield')], max_length=20)),
                ('weapon', models.CharField(choices=[('simple_melee', 'Simple Melee Weapons'), ('simple_ranged', 'Simple Ranged Weapons'), ('martial_melee', 'Martial Melee Weapons'), ('martial_ranged', 'Martial Ranged Weapons')], max_length=20)),
                ('languages', models.JSONField(default=list)),
                ('tools', models.CharField(choices=[('alchemist_supplies', "Alchemist's Supplies"), ('brewer_supplies', "Brewer's Supplies"), ('calligrapher_supplies', "Calligrapher's Supplies"), ('carpenter_tools', "Carpenter's Tools"), ('cartographer_tools', "Cartographer's Tools"), ('cobbler_tools', "Cobbler's Tools"), ('cook_utensils', "Cook's Utensils"), ('glassblower_tools', "Glassblower's Tools"), ('jeweler_tools', "Jeweler's Tools"), ('leatherworker_tools', "Leatherworker's Tools"), ('mason_tools', "Mason's Tools"), ('painter_supplies', "Painter's Supplies"), ('potter_tools', "Potter's Tools"), ('smith_tools', "Smith's Tools"), ('tinker_tools', "Tinker's Tools"), ('weaver_tools', "Weaver's Tools"), ('woodcarver_tools', "Woodcarver's Tools"), ('disguise_kit', 'Disguise Kit'), ('forgery_kit', 'Forgery Kit'), ('herbalism_kit', 'Herbalism Kit'), ('navigator_tools', "Navigator's Tools"), ('poisoner_kit', "Poisoner's Kit"), ('thieves_tools', "Thieves' Tools")], max_length=50)),
                ('str_saving_throw', models.IntegerField(default=0)),
                ('str_saving_throw_flag', models.BooleanField(default=False)),
                ('dex_saving_throw', models.IntegerField(default=0)),
                ('dex_saving_throw_flag', models.BooleanField(default=False)),
                ('con_saving_throw', models.IntegerField(default=0)),
                ('con_saving_throw_flag', models.BooleanField(default=False)),
                ('int_saving_throw', models.IntegerField(default=0)),
                ('int_saving_throw_flag', models.BooleanField(default=False)),
                ('wis_saving_throw', models.IntegerField(default=0)),
                ('wis_saving_throw_flag', models.BooleanField(default=False)),
                ('cha_saving_throw', models.IntegerField(default=0)),
                ('cha_saving_throw_flag', models.BooleanField(default=False)),
                ('acrobatics', models.IntegerField(default=0)),
                ('acrobatics_flag', models.BooleanField(default=False)),
                ('animal_handling', models.IntegerField(default=0)),
                ('animal_handling_flag', models.BooleanField(default=False)),
                ('arcana', models.IntegerField(default=0)),
                ('arcana_flag', models.BooleanField(default=False)),
                ('athletics', models.IntegerField(default=0)),
                ('athletics_flag', models.BooleanField(default=False)),
                ('deception', models.IntegerField(default=0)),
                ('deception_flag', models.BooleanField(default=False)),
                ('history', models.IntegerField(default=0)),
                ('history_flag', models.BooleanField(default=False)),
                ('insight', models.IntegerField(default=0)),
                ('insight_flag', models.BooleanField(default=False)),
                ('intimidation', models.IntegerField(default=0)),
                ('intimidation_flag', models.BooleanField(default=False)),
                ('investigation', models.IntegerField(default=0)),
                ('investigation_flag', models.BooleanField(default=False)),
                ('medicine', models.IntegerField(default=0)),
                ('medicine_flag', models.BooleanField(default=False)),
                ('nature', models.IntegerField(default=0)),
                ('nature_flag', models.BooleanField(default=False)),
                ('perception', models.IntegerField(default=0)),
                ('perception_flag', models.BooleanField(default=False)),
                ('performance', models.IntegerField(default=0)),
                ('performance_flag', models.BooleanField(default=False)),
                ('persuasion', models.IntegerField(default=0)),
                ('persuasion_flag', models.BooleanField(default=False)),
                ('religion', models.IntegerField(default=0)),
                ('religion_flag', models.BooleanField(default=False)),
                ('sleight_of_hand', models.IntegerField(default=0)),
                ('sleight_of_hand_flag', models.BooleanField(default=False)),
                ('stealth', models.IntegerField(default=0)),
                ('stealth_flag', models.BooleanField(default=False)),
                ('survival', models.IntegerField(default=0)),
                ('survival_flag', models.BooleanField(default=False)),
                ('background', models.CharField(blank=True, max_length=700)),
                ('appearance', models.CharField(blank=True, max_length=250)),
                ('philosophy', models.CharField(blank=True, max_length=100)),
                ('life_goals', models.CharField(blank=True, max_length=50)),
                ('strengths', models.CharField(blank=True, max_length=50)),
                ('flaws', models.CharField(blank=True, max_length=50)),
                ('bonds', models.CharField(blank=True, max_length=50)),
                ('distinguishing_features', models.CharField(blank=True, max_length=250)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_sheets', to=settings.AUTH_USER_MODEL)),
                ('items', models.ManyToManyField(blank=True, to='char_sheets.item')),
                ('spells', models.ManyToManyField(blank=True, to='char_sheets.spell')),
            ],
        ),
    ]
